@page "/"
@rendermode InteractiveServer
@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorageService
@inject IProjectService ProjectService

<PageTitle>Home</PageTitle>

@if (isUserLoggedIn)
{
    <h1>Olá, @userName!</h1>

    @if (projects != null && projects.Any())
    {
        <h2>Seus Projetos</h2>
        <div class="card-container">
            @foreach (var project in projects)
            {
                <div class="card">
                    <h3>@project.ProjectName</h3>
                    <p>Status: @project.Status</p>
                    <p>Orçamento: @project.Budget.ToString()</p>
                </div>
            }
        </div>
    }
    else
    {
        <p>Não existem projetos para você.</p>
    }
}
else
{
    <h1>Bem-vindo ao nosso site!</h1>
    <p>Por favor, faça login para ver seus projetos.</p>
}

@code {
    private bool isUserLoggedIn;
    private string userName;
    private List<ProjectsDTO> projects;

    protected override async Task OnInitializedAsync()
    {
        // Verifica se o usuário está logado
        userName = await LocalStorageService.GetItemAsync<string>("userName");
        isUserLoggedIn = !string.IsNullOrEmpty(userName);

        if (isUserLoggedIn)
        {
            try
            {
                // Busca os projetos do usuário logado
                projects = (await ProjectService.GetProjectsByLoggedInUser()).ToList();
            }
            catch (HttpRequestException)
            {
                // Lida com a exceção caso o pedido falhe
                projects = new List<ProjectsDTO>();
            }
        }
    }
}
