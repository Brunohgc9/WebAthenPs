@page "/newProject"
@using WebAthenPs.Models.Models
@inject IProjectService ProjectService
@inject NavigationManager Navigation

<h3>Criar Novo Projeto</h3>

<EditForm Model="newProject" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="constructionType">Tipo de Construção</label>
        <InputText id="constructionType" class="form-control" @bind-Value="newProject.ConstructionType" />
    </div>

    <div class="mb-3">
        <label for="status">Status</label>
        <InputText id="status" class="form-control" @bind-Value="newProject.Status" />
    </div>

    <div class="mb-3">
        <label for="budget">Orçamento</label>
        <InputNumber id="budget" class="form-control" @bind-Value="newProject.Budget" />
    </div>


    <div class="mb-3">
        <label for="address">Endereço</label>
        <InputText id="address" class="form-control" @bind-Value="newProject.Address" />
    </div>

    <div class="mb-3">
        <label for="neighborhood">Bairro</label>
        <InputText id="neighborhood" class="form-control" @bind-Value="newProject.Neighborhood" />
    </div>

    <div class="mb-3">
        <label for="city">Cidade</label>
        <InputText id="city" class="form-control" @bind-Value="newProject.City" />
    </div>

    <div class="mb-3">
        <label for="state">Estado</label>
        <InputText id="state" class="form-control" @bind-Value="newProject.State" />
    </div>

    <div class="mb-3">
        <label for="country">País</label>
        <InputText id="country" class="form-control" @bind-Value="newProject.Country" />
    </div>

    <div class="mb-3">
        <label for="clientDescription">Descrição do Cliente</label>
        <InputText id="clientDescription" class="form-control" @bind-Value="newProject.ClientDescription" />
    </div>

    <button type="submit" class="btn btn-primary">Registrar Projeto</button>
</EditForm>

@if (isSubmitting)
{
    <p>A registrando o projeto...</p>
}

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    private RegisterProjectModel newProject = new RegisterProjectModel();
    private bool isSubmitting = false;
    private string message;

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        try
        {
            // Chame o serviço para criar o projeto
            var result = await ProjectService.CreateProject(newProject);
            if (result != null)
            {
                message = "Projeto registrado com sucesso!";
                Navigation.NavigateTo("/projetos"); // Navegar para a lista de projetos
            }
            else
            {
                message = "Erro ao registrar o projeto. Nenhum retorno da API.";
            }
        }
        catch (Exception ex)
        {
            message = $"Erro ao registrar o projeto: {ex.Message}";
        }
        isSubmitting = false;
    }

}
