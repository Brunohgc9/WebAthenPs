// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAthenPs.API.Data;

#nullable disable

namespace WebAthenPs.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240728015749_Eleventh")]
    partial class Eleventh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("GProfessionalId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "GProfessionalId");

                    b.HasIndex("GProfessionalId");

                    b.ToTable("ProjectProfessionals");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            GProfessionalId = 1
                        },
                        new
                        {
                            ProjectId = 1,
                            GProfessionalId = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            GProfessionalId = 3
                        },
                        new
                        {
                            ProjectId = 2,
                            GProfessionalId = 4
                        },
                        new
                        {
                            ProjectId = 3,
                            GProfessionalId = 5
                        },
                        new
                        {
                            ProjectId = 3,
                            GProfessionalId = 6
                        },
                        new
                        {
                            ProjectId = 4,
                            GProfessionalId = 7
                        },
                        new
                        {
                            ProjectId = 4,
                            GProfessionalId = 8
                        },
                        new
                        {
                            ProjectId = 5,
                            GProfessionalId = 9
                        },
                        new
                        {
                            ProjectId = 5,
                            GProfessionalId = 10
                        },
                        new
                        {
                            ProjectId = 6,
                            GProfessionalId = 11
                        },
                        new
                        {
                            ProjectId = 6,
                            GProfessionalId = 12
                        },
                        new
                        {
                            ProjectId = 7,
                            GProfessionalId = 13
                        },
                        new
                        {
                            ProjectId = 7,
                            GProfessionalId = 14
                        },
                        new
                        {
                            ProjectId = 8,
                            GProfessionalId = 15
                        },
                        new
                        {
                            ProjectId = 8,
                            GProfessionalId = 1
                        },
                        new
                        {
                            ProjectId = 9,
                            GProfessionalId = 2
                        },
                        new
                        {
                            ProjectId = 9,
                            GProfessionalId = 3
                        },
                        new
                        {
                            ProjectId = 10,
                            GProfessionalId = 4
                        },
                        new
                        {
                            ProjectId = 10,
                            GProfessionalId = 5
                        },
                        new
                        {
                            ProjectId = 11,
                            GProfessionalId = 6
                        },
                        new
                        {
                            ProjectId = 11,
                            GProfessionalId = 7
                        },
                        new
                        {
                            ProjectId = 12,
                            GProfessionalId = 8
                        },
                        new
                        {
                            ProjectId = 12,
                            GProfessionalId = 9
                        },
                        new
                        {
                            ProjectId = 13,
                            GProfessionalId = 10
                        },
                        new
                        {
                            ProjectId = 13,
                            GProfessionalId = 11
                        },
                        new
                        {
                            ProjectId = 14,
                            GProfessionalId = 12
                        },
                        new
                        {
                            ProjectId = 14,
                            GProfessionalId = 13
                        },
                        new
                        {
                            ProjectId = 15,
                            GProfessionalId = 14
                        },
                        new
                        {
                            ProjectId = 15,
                            GProfessionalId = 15
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            CPF = "12345678901",
                            City = "CityA",
                            ConcurrencyStamp = "7cd7c094-f545-462a-8efd-08449da86169",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(665),
                            Email = "john.doe@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "12345",
                            RG = "1234567",
                            Role = "Admin",
                            SecurityStamp = "05aef0d1-e9f3-4560-82ea-5c4ad3d57d0e",
                            State = "StateA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(668),
                            UserName = "John Doe",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            Address = "456 Oak St",
                            CPF = "23456789012",
                            City = "CityB",
                            ConcurrencyStamp = "cbb51258-34ab-4b60-b817-7a88ff0215a9",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(775),
                            Email = "jane.smith@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "23456",
                            RG = "2345678",
                            Role = "User",
                            SecurityStamp = "a98bfdbb-8f18-4efb-9eb7-32f6e939bd24",
                            State = "StateB",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(775),
                            UserName = "Jane Smith",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            Address = "789 Pine St",
                            CPF = "34567890123",
                            City = "CityC",
                            ConcurrencyStamp = "791fbb6d-ad93-4721-8865-cbff3c590201",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(787),
                            Email = "michael.johnson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "34567",
                            RG = "3456789",
                            Role = "Admin",
                            SecurityStamp = "44e332d9-d4ac-4229-b946-abbe981f679c",
                            State = "StateC",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(788),
                            UserName = "Michael Johnson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            Address = "101 Maple St",
                            CPF = "45678901234",
                            City = "CityD",
                            ConcurrencyStamp = "f4e91bba-d1de-4eb5-93ec-6715143f9689",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(800),
                            Email = "emily.davis@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "45678",
                            RG = "4567890",
                            Role = "User",
                            SecurityStamp = "0209497c-ab3a-4e35-9266-02155a09f8e5",
                            State = "StateD",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(800),
                            UserName = "Emily Davis",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            Address = "202 Birch St",
                            CPF = "56789012345",
                            City = "CityE",
                            ConcurrencyStamp = "7d47fe81-6afc-4910-bcb2-f73e68f71314",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(811),
                            Email = "david.wilson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "56789",
                            RG = "5678901",
                            Role = "Admin",
                            SecurityStamp = "5c8a542b-3ad0-41dc-b66c-b88ad2d217d9",
                            State = "StateE",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(812),
                            UserName = "David Wilson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            Address = "303 Cedar St",
                            CPF = "67890123456",
                            City = "CityF",
                            ConcurrencyStamp = "b7877b26-3374-4d1e-9c33-2ffd6d45ce37",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(823),
                            Email = "sarah.miller@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "67890",
                            RG = "6789012",
                            Role = "User",
                            SecurityStamp = "261d59b6-4fe7-461a-b31b-1b20d6125c1d",
                            State = "StateF",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(823),
                            UserName = "Sarah Miller",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            Address = "404 Fir St",
                            CPF = "78901234567",
                            City = "CityG",
                            ConcurrencyStamp = "7b6dadc1-c5a6-44ef-87c1-569ffced570d",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(837),
                            Email = "james.moore@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "78901",
                            RG = "7890123",
                            Role = "Admin",
                            SecurityStamp = "215fcd11-d546-49d3-a35a-aad1903d0bd1",
                            State = "StateG",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(837),
                            UserName = "James Moore",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            Address = "505 Spruce St",
                            CPF = "89012345678",
                            City = "CityH",
                            ConcurrencyStamp = "6532f7e1-8219-4c00-a4ca-f85b44c61a56",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(848),
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "89012",
                            RG = "8901234",
                            Role = "User",
                            SecurityStamp = "aa309fd5-4a41-4370-ae60-e621210ef448",
                            State = "StateH",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(848),
                            UserName = "Olivia Taylor",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            Address = "606 Hemlock St",
                            CPF = "90123456789",
                            City = "CityI",
                            ConcurrencyStamp = "bd5e7f62-4936-4173-82ec-01cb951c4d77",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(859),
                            Email = "daniel.anderson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "90123",
                            RG = "9012345",
                            Role = "Admin",
                            SecurityStamp = "ebb16f6f-fe19-4df9-a3de-7464a7777880",
                            State = "StateI",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(859),
                            UserName = "Daniel Anderson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            Address = "707 Juniper St",
                            CPF = "01234567890",
                            City = "CityJ",
                            ConcurrencyStamp = "f9e13f8e-8395-427a-b9cc-d111df60199b",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(872),
                            Email = "madison.lee@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "01234",
                            RG = "0123456",
                            Role = "User",
                            SecurityStamp = "992e174b-fe3e-4fc6-b1f9-c5bad0e8026e",
                            State = "StateJ",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(872),
                            UserName = "Madison Lee",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            Address = "808 Willow St",
                            CPF = "12345678901",
                            City = "CityK",
                            ConcurrencyStamp = "9654b232-6893-4661-87c3-ec0a08ea2e40",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(883),
                            Email = "ethan.harris@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "12346",
                            RG = "1234568",
                            Role = "Admin",
                            SecurityStamp = "45bede2b-a8c2-4003-9b74-c21b76722818",
                            State = "StateK",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(884),
                            UserName = "Ethan Harris",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            Address = "909 Poplar St",
                            CPF = "23456789012",
                            City = "CityL",
                            ConcurrencyStamp = "3be831dd-4394-47da-a206-0fbc7700a297",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(896),
                            Email = "isabella.clark@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "23457",
                            RG = "2345679",
                            Role = "User",
                            SecurityStamp = "82b41920-9aad-45b4-93aa-867ac7fcb749",
                            State = "StateL",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(896),
                            UserName = "Isabella Clark",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            Address = "1010 Redwood St",
                            CPF = "34567890123",
                            City = "CityM",
                            ConcurrencyStamp = "92428276-3420-449c-b50c-95b1a5588da3",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(907),
                            Email = "alexander.lewis@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "34568",
                            RG = "3456790",
                            Role = "Admin",
                            SecurityStamp = "4c3c696f-adcb-4583-b37a-c2729152f7d9",
                            State = "StateM",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(907),
                            UserName = "Alexander Lewis",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            Address = "1111 Fir St",
                            CPF = "45678901234",
                            City = "CityN",
                            ConcurrencyStamp = "d97c0d27-97b0-4d4b-92c5-3e1263a4ba5f",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(918),
                            Email = "ava.walker@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "45679",
                            RG = "4567901",
                            Role = "User",
                            SecurityStamp = "02bfe997-a912-43b5-baab-646793563c9d",
                            State = "StateN",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(918),
                            UserName = "Ava Walker",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            Address = "1212 Elm St",
                            CPF = "56789012345",
                            City = "CityO",
                            ConcurrencyStamp = "3f955f67-6bf6-4fd6-bfd8-0460c3cdcc92",
                            CreatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(931),
                            Email = "liam.young@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "56780",
                            RG = "5678912",
                            Role = "Admin",
                            SecurityStamp = "8a01653b-8528-4be7-80d5-ba236dfb8bf3",
                            State = "StateO",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 28, 1, 57, 48, 886, DateTimeKind.Utc).AddTicks(931),
                            UserName = "Liam Young",
                            UserType = "Residential"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            UserId = "user1"
                        },
                        new
                        {
                            ClientId = 2,
                            UserId = "user2"
                        },
                        new
                        {
                            ClientId = 3,
                            UserId = "user3"
                        },
                        new
                        {
                            ClientId = 4,
                            UserId = "user4"
                        },
                        new
                        {
                            ClientId = 5,
                            UserId = "user5"
                        },
                        new
                        {
                            ClientId = 6,
                            UserId = "user6"
                        },
                        new
                        {
                            ClientId = 7,
                            UserId = "user7"
                        },
                        new
                        {
                            ClientId = 8,
                            UserId = "user8"
                        },
                        new
                        {
                            ClientId = 9,
                            UserId = "user9"
                        },
                        new
                        {
                            ClientId = 10,
                            UserId = "user10"
                        },
                        new
                        {
                            ClientId = 11,
                            UserId = "user11"
                        },
                        new
                        {
                            ClientId = 12,
                            UserId = "user12"
                        },
                        new
                        {
                            ClientId = 13,
                            UserId = "user13"
                        },
                        new
                        {
                            ClientId = 14,
                            UserId = "user14"
                        },
                        new
                        {
                            ClientId = 15,
                            UserId = "user15"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.Property<int>("GProfessionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GProfessionalId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GProfessionalId");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("GenericProfessionals");

                    b.HasData(
                        new
                        {
                            GProfessionalId = 1,
                            ClientId = 1,
                            UserId = "user1"
                        },
                        new
                        {
                            GProfessionalId = 2,
                            ClientId = 2,
                            UserId = "user2"
                        },
                        new
                        {
                            GProfessionalId = 3,
                            ClientId = 3,
                            UserId = "user3"
                        },
                        new
                        {
                            GProfessionalId = 4,
                            ClientId = 4,
                            UserId = "user4"
                        },
                        new
                        {
                            GProfessionalId = 5,
                            ClientId = 5,
                            UserId = "user5"
                        },
                        new
                        {
                            GProfessionalId = 6,
                            ClientId = 6,
                            UserId = "user6"
                        },
                        new
                        {
                            GProfessionalId = 7,
                            ClientId = 7,
                            UserId = "user7"
                        },
                        new
                        {
                            GProfessionalId = 8,
                            ClientId = 8,
                            UserId = "user8"
                        },
                        new
                        {
                            GProfessionalId = 9,
                            ClientId = 9,
                            UserId = "user9"
                        },
                        new
                        {
                            GProfessionalId = 10,
                            ClientId = 10,
                            UserId = "user10"
                        },
                        new
                        {
                            GProfessionalId = 11,
                            ClientId = 11,
                            UserId = "user11"
                        },
                        new
                        {
                            GProfessionalId = 12,
                            ClientId = 12,
                            UserId = "user12"
                        },
                        new
                        {
                            GProfessionalId = 13,
                            ClientId = 13,
                            UserId = "user13"
                        },
                        new
                        {
                            GProfessionalId = 14,
                            ClientId = 14,
                            UserId = "user14"
                        },
                        new
                        {
                            GProfessionalId = 15,
                            ClientId = 15,
                            UserId = "user15"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Address = "123 Main St",
                            Budget = 500000m,
                            City = "CityA",
                            ClientId = 1,
                            ConstructionType = "Residential",
                            Country = "CountryA",
                            Description = "Residential building item",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 4,
                            PostalCode = "12345",
                            ProjectName = "Project Alpha",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateA",
                            Status = "In Progress",
                            TotalArea = 250.5m
                        },
                        new
                        {
                            ProjectId = 2,
                            Address = "456 Oak St",
                            Budget = 1000000m,
                            City = "CityB",
                            ClientId = 2,
                            ConstructionType = "Commercial",
                            Country = "CountryB",
                            Description = "Commercial building item",
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 5,
                            NumberOfRooms = 10,
                            PostalCode = "23456",
                            ProjectName = "Project Beta",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateB",
                            Status = "Completed",
                            TotalArea = 500.0m
                        },
                        new
                        {
                            ProjectId = 3,
                            Address = "789 Pine St",
                            Budget = 250000m,
                            City = "CityC",
                            ClientId = 3,
                            ConstructionType = "Residential",
                            Country = "CountryC",
                            Description = "Planning phase",
                            Neighborhood = "Suburban",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            PostalCode = "34567",
                            ProjectName = "Project Gamma",
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateC",
                            Status = "Planning",
                            TotalArea = 180.0m
                        },
                        new
                        {
                            ProjectId = 4,
                            Address = "101 Maple St",
                            Budget = 750000m,
                            City = "CityD",
                            ClientId = 4,
                            ConstructionType = "Commercial",
                            Country = "CountryD",
                            Description = "Office building item",
                            Neighborhood = "Tech Park",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "45678",
                            ProjectName = "Project Delta",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateD",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 5,
                            Address = "202 Birch St",
                            Budget = 300000m,
                            City = "CityE",
                            ClientId = 5,
                            ConstructionType = "Residential",
                            Country = "CountryE",
                            Description = "Single-family home",
                            EndDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Quiet Street",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "56789",
                            ProjectName = "Project Epsilon",
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateE",
                            Status = "Completed",
                            TotalArea = 220.0m
                        },
                        new
                        {
                            ProjectId = 6,
                            Address = "303 Cedar St",
                            Budget = 1200000m,
                            City = "CityF",
                            ClientId = 6,
                            ConstructionType = "Commercial",
                            Country = "CountryF",
                            Description = "Shopping mall",
                            Neighborhood = "Retail Hub",
                            NumberOfBathrooms = 10,
                            NumberOfRooms = 20,
                            PostalCode = "67890",
                            ProjectName = "Project Zeta",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateF",
                            Status = "Planning",
                            TotalArea = 800.0m
                        },
                        new
                        {
                            ProjectId = 7,
                            Address = "404 Fir St",
                            Budget = 600000m,
                            City = "CityG",
                            ClientId = 7,
                            ConstructionType = "Residential",
                            Country = "CountryG",
                            Description = "Luxury apartments",
                            Neighborhood = "Uptown",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "78901",
                            ProjectName = "Project Eta",
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateG",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 8,
                            Address = "505 Spruce St",
                            Budget = 500000m,
                            City = "CityH",
                            ClientId = 8,
                            ConstructionType = "Commercial",
                            Country = "CountryH",
                            Description = "Retail space",
                            EndDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Main Street",
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            PostalCode = "89012",
                            ProjectName = "Project Theta",
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateH",
                            Status = "Completed",
                            TotalArea = 150.0m
                        },
                        new
                        {
                            ProjectId = 9,
                            Address = "606 Hemlock St",
                            Budget = 400000m,
                            City = "CityI",
                            ClientId = 9,
                            ConstructionType = "Residential",
                            Country = "CountryI",
                            Description = "Vacation home",
                            Neighborhood = "Lakeside",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "90123",
                            ProjectName = "Project Iota",
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateI",
                            Status = "Planning",
                            TotalArea = 300.0m
                        },
                        new
                        {
                            ProjectId = 10,
                            Address = "707 Juniper St",
                            Budget = 800000m,
                            City = "CityJ",
                            ClientId = 10,
                            ConstructionType = "Commercial",
                            Country = "CountryJ",
                            Description = "Restaurant",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "01234",
                            ProjectName = "Project Kappa",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateJ",
                            Status = "In Progress",
                            TotalArea = 250.0m
                        },
                        new
                        {
                            ProjectId = 11,
                            Address = "808 Willow St",
                            Budget = 350000m,
                            City = "CityK",
                            ClientId = 11,
                            ConstructionType = "Residential",
                            Country = "CountryK",
                            Description = "Townhouse",
                            EndDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Historic District",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "12346",
                            ProjectName = "Project Lambda",
                            StartDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateK",
                            Status = "Completed",
                            TotalArea = 200.0m
                        },
                        new
                        {
                            ProjectId = 12,
                            Address = "909 Poplar St",
                            Budget = 950000m,
                            City = "CityL",
                            ClientId = 12,
                            ConstructionType = "Commercial",
                            Country = "CountryL",
                            Description = "Corporate office",
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "23457",
                            ProjectName = "Project Mu",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateL",
                            Status = "Planning",
                            TotalArea = 400.0m
                        },
                        new
                        {
                            ProjectId = 13,
                            Address = "1010 Redwood St",
                            Budget = 700000m,
                            City = "CityM",
                            ClientId = 13,
                            ConstructionType = "Residential",
                            Country = "CountryM",
                            Description = "Condo complex",
                            Neighborhood = "Urban Area",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "34568",
                            ProjectName = "Project Nu",
                            StartDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateM",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 14,
                            Address = "1111 Fir St",
                            Budget = 1100000m,
                            City = "CityN",
                            ClientId = 14,
                            ConstructionType = "Commercial",
                            Country = "CountryN",
                            Description = "Hotel",
                            EndDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Resort Area",
                            NumberOfBathrooms = 30,
                            NumberOfRooms = 50,
                            PostalCode = "45679",
                            ProjectName = "Project Xi",
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateN",
                            Status = "Completed",
                            TotalArea = 600.0m
                        },
                        new
                        {
                            ProjectId = 15,
                            Address = "1212 Elm St",
                            Budget = 500000m,
                            City = "CityO",
                            ClientId = 15,
                            ConstructionType = "Residential",
                            Country = "CountryO",
                            Description = "Family home",
                            Neighborhood = "Suburban",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "56780",
                            ProjectName = "Project Omicron",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateO",
                            Status = "In Progress",
                            TotalArea = 270.0m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.GenericProfessional", null)
                        .WithMany()
                        .HasForeignKey("GProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Entities.Projects", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("GenericProfessionals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projects", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("Houses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Navigation("GenericProfessionals");

                    b.Navigation("Houses");
                });
#pragma warning restore 612, 618
        }
    }
}
