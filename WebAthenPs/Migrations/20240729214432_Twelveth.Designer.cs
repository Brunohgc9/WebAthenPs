// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAthenPs.API.Data;

#nullable disable

namespace WebAthenPs.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240729214432_Twelveth")]
    partial class Twelveth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("GProfessionalId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "GProfessionalId");

                    b.HasIndex("GProfessionalId");

                    b.ToTable("ProjectProfessionals");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            GProfessionalId = 1
                        },
                        new
                        {
                            ProjectId = 1,
                            GProfessionalId = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            GProfessionalId = 3
                        },
                        new
                        {
                            ProjectId = 2,
                            GProfessionalId = 4
                        },
                        new
                        {
                            ProjectId = 3,
                            GProfessionalId = 5
                        },
                        new
                        {
                            ProjectId = 3,
                            GProfessionalId = 6
                        },
                        new
                        {
                            ProjectId = 4,
                            GProfessionalId = 7
                        },
                        new
                        {
                            ProjectId = 4,
                            GProfessionalId = 8
                        },
                        new
                        {
                            ProjectId = 5,
                            GProfessionalId = 9
                        },
                        new
                        {
                            ProjectId = 5,
                            GProfessionalId = 10
                        },
                        new
                        {
                            ProjectId = 6,
                            GProfessionalId = 11
                        },
                        new
                        {
                            ProjectId = 6,
                            GProfessionalId = 12
                        },
                        new
                        {
                            ProjectId = 7,
                            GProfessionalId = 13
                        },
                        new
                        {
                            ProjectId = 7,
                            GProfessionalId = 14
                        },
                        new
                        {
                            ProjectId = 8,
                            GProfessionalId = 15
                        },
                        new
                        {
                            ProjectId = 8,
                            GProfessionalId = 1
                        },
                        new
                        {
                            ProjectId = 9,
                            GProfessionalId = 2
                        },
                        new
                        {
                            ProjectId = 9,
                            GProfessionalId = 3
                        },
                        new
                        {
                            ProjectId = 10,
                            GProfessionalId = 4
                        },
                        new
                        {
                            ProjectId = 10,
                            GProfessionalId = 5
                        },
                        new
                        {
                            ProjectId = 11,
                            GProfessionalId = 6
                        },
                        new
                        {
                            ProjectId = 11,
                            GProfessionalId = 7
                        },
                        new
                        {
                            ProjectId = 12,
                            GProfessionalId = 8
                        },
                        new
                        {
                            ProjectId = 12,
                            GProfessionalId = 9
                        },
                        new
                        {
                            ProjectId = 13,
                            GProfessionalId = 10
                        },
                        new
                        {
                            ProjectId = 13,
                            GProfessionalId = 11
                        },
                        new
                        {
                            ProjectId = 14,
                            GProfessionalId = 12
                        },
                        new
                        {
                            ProjectId = 14,
                            GProfessionalId = 13
                        },
                        new
                        {
                            ProjectId = 15,
                            GProfessionalId = 14
                        },
                        new
                        {
                            ProjectId = 15,
                            GProfessionalId = 15
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            CPF = "12345678901",
                            City = "CityA",
                            ConcurrencyStamp = "36865a4b-30c3-4031-98b9-e4bf006b429c",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9288),
                            Email = "john.doe@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "12345",
                            RG = "1234567",
                            Role = "Admin",
                            SecurityStamp = "42439a04-892b-4dc7-b339-cc1e558c76bb",
                            State = "StateA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9289),
                            UserName = "John Doe",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            Address = "456 Oak St",
                            CPF = "23456789012",
                            City = "CityB",
                            ConcurrencyStamp = "4ae6e24b-bd3f-4181-a729-4c061ff11bb9",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9347),
                            Email = "jane.smith@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "23456",
                            RG = "2345678",
                            Role = "User",
                            SecurityStamp = "1468ede0-791a-4435-9438-d968ad5cb4f7",
                            State = "StateB",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9348),
                            UserName = "Jane Smith",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            Address = "789 Pine St",
                            CPF = "34567890123",
                            City = "CityC",
                            ConcurrencyStamp = "af97d056-dbc5-496b-84b3-6eb0bd152310",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9359),
                            Email = "michael.johnson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "34567",
                            RG = "3456789",
                            Role = "Admin",
                            SecurityStamp = "8018dbd1-eef7-41e3-9cdc-2c0c3ad8b060",
                            State = "StateC",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9359),
                            UserName = "Michael Johnson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            Address = "101 Maple St",
                            CPF = "45678901234",
                            City = "CityD",
                            ConcurrencyStamp = "f90afe07-1652-40ca-bd9b-3c35b94aa459",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9389),
                            Email = "emily.davis@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "45678",
                            RG = "4567890",
                            Role = "User",
                            SecurityStamp = "9f9fcabe-041c-4e35-9b53-943e0bc10191",
                            State = "StateD",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9389),
                            UserName = "Emily Davis",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            Address = "202 Birch St",
                            CPF = "56789012345",
                            City = "CityE",
                            ConcurrencyStamp = "99bb04e1-49ba-49dc-8ce5-4bae0d3b046e",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9400),
                            Email = "david.wilson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "56789",
                            RG = "5678901",
                            Role = "Admin",
                            SecurityStamp = "67f18af3-afd9-4f09-b96d-4ccb3f6fc582",
                            State = "StateE",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9400),
                            UserName = "David Wilson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            Address = "303 Cedar St",
                            CPF = "67890123456",
                            City = "CityF",
                            ConcurrencyStamp = "7c8632a2-00b1-4a47-8fe2-fead94676d41",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9413),
                            Email = "sarah.miller@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "67890",
                            RG = "6789012",
                            Role = "User",
                            SecurityStamp = "04aa2acc-519e-44e0-86af-3d2d69aa710c",
                            State = "StateF",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9414),
                            UserName = "Sarah Miller",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            Address = "404 Fir St",
                            CPF = "78901234567",
                            City = "CityG",
                            ConcurrencyStamp = "d97ffb87-441f-4e2d-9813-702767b7b548",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9424),
                            Email = "james.moore@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "78901",
                            RG = "7890123",
                            Role = "Admin",
                            SecurityStamp = "79313d8b-2c69-4b6d-8938-2c5e3610e80b",
                            State = "StateG",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9425),
                            UserName = "James Moore",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            Address = "505 Spruce St",
                            CPF = "89012345678",
                            City = "CityH",
                            ConcurrencyStamp = "cbc900fe-7a93-4439-8225-8b612d0e8dc8",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9435),
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "89012",
                            RG = "8901234",
                            Role = "User",
                            SecurityStamp = "3e34e0f0-930c-464a-b49e-c39d7d84e894",
                            State = "StateH",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9436),
                            UserName = "Olivia Taylor",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            Address = "606 Hemlock St",
                            CPF = "90123456789",
                            City = "CityI",
                            ConcurrencyStamp = "e9c505b5-c8cd-400b-8ee8-986bada3efb0",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9470),
                            Email = "daniel.anderson@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "90123",
                            RG = "9012345",
                            Role = "Admin",
                            SecurityStamp = "888049ed-eb7b-4948-801b-f7172b797cd6",
                            State = "StateI",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9470),
                            UserName = "Daniel Anderson",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            Address = "707 Juniper St",
                            CPF = "01234567890",
                            City = "CityJ",
                            ConcurrencyStamp = "5ad71f0c-4abe-4084-9506-4a0c6924a51e",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9480),
                            Email = "madison.lee@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "01234",
                            RG = "0123456",
                            Role = "User",
                            SecurityStamp = "a669a93f-da71-42d0-9045-3164d4e5f0fd",
                            State = "StateJ",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9481),
                            UserName = "Madison Lee",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            Address = "808 Willow St",
                            CPF = "12345678901",
                            City = "CityK",
                            ConcurrencyStamp = "abf5f39c-a430-447c-bd4b-d735ce07ce53",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9491),
                            Email = "ethan.harris@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "12346",
                            RG = "1234568",
                            Role = "Admin",
                            SecurityStamp = "dc50eb05-c951-4b06-a5c0-a36e698a9de9",
                            State = "StateK",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9491),
                            UserName = "Ethan Harris",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            Address = "909 Poplar St",
                            CPF = "23456789012",
                            City = "CityL",
                            ConcurrencyStamp = "ae2c5816-abe0-4b83-879a-c75e0e7740b4",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9504),
                            Email = "isabella.clark@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "23457",
                            RG = "2345679",
                            Role = "User",
                            SecurityStamp = "dbe74217-3cce-4c58-8160-dd277ea8039a",
                            State = "StateL",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9505),
                            UserName = "Isabella Clark",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            Address = "1010 Redwood St",
                            CPF = "34567890123",
                            City = "CityM",
                            ConcurrencyStamp = "cde1b1bf-d2e6-464f-a381-7ccebc423095",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9515),
                            Email = "alexander.lewis@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "34568",
                            RG = "3456790",
                            Role = "Admin",
                            SecurityStamp = "5fe76a55-b0ec-49ad-8661-18ddfcf02c13",
                            State = "StateM",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9516),
                            UserName = "Alexander Lewis",
                            UserType = "Residential"
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            Address = "1111 Fir St",
                            CPF = "45678901234",
                            City = "CityN",
                            ConcurrencyStamp = "1d13158a-e252-467e-9ba9-05fe02ca1844",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9527),
                            Email = "ava.walker@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "45679",
                            RG = "4567901",
                            Role = "User",
                            SecurityStamp = "f4b2930a-a68e-4b04-8f94-d2c4886636dd",
                            State = "StateN",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9527),
                            UserName = "Ava Walker",
                            UserType = "Commercial"
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            Address = "1212 Elm St",
                            CPF = "56789012345",
                            City = "CityO",
                            ConcurrencyStamp = "7f1de827-a284-433b-884b-f36a7633837d",
                            CreatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9538),
                            Email = "liam.young@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "56780",
                            RG = "5678912",
                            Role = "Admin",
                            SecurityStamp = "a4dbedf4-21b7-4a61-b001-67f0803f7ab6",
                            State = "StateO",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 7, 29, 21, 44, 32, 107, DateTimeKind.Utc).AddTicks(9538),
                            UserName = "Liam Young",
                            UserType = "Residential"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            UserId = "user1"
                        },
                        new
                        {
                            ClientId = 2,
                            UserId = "user2"
                        },
                        new
                        {
                            ClientId = 3,
                            UserId = "user3"
                        },
                        new
                        {
                            ClientId = 4,
                            UserId = "user4"
                        },
                        new
                        {
                            ClientId = 5,
                            UserId = "user5"
                        },
                        new
                        {
                            ClientId = 6,
                            UserId = "user6"
                        },
                        new
                        {
                            ClientId = 7,
                            UserId = "user7"
                        },
                        new
                        {
                            ClientId = 8,
                            UserId = "user8"
                        },
                        new
                        {
                            ClientId = 9,
                            UserId = "user9"
                        },
                        new
                        {
                            ClientId = 10,
                            UserId = "user10"
                        },
                        new
                        {
                            ClientId = 11,
                            UserId = "user11"
                        },
                        new
                        {
                            ClientId = 12,
                            UserId = "user12"
                        },
                        new
                        {
                            ClientId = 13,
                            UserId = "user13"
                        },
                        new
                        {
                            ClientId = 14,
                            UserId = "user14"
                        },
                        new
                        {
                            ClientId = 15,
                            UserId = "user15"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.Property<int>("GProfessionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GProfessionalId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GProfessionalId");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("GenericProfessionals");

                    b.HasData(
                        new
                        {
                            GProfessionalId = 1,
                            ClientId = 1,
                            UserId = "user1"
                        },
                        new
                        {
                            GProfessionalId = 2,
                            ClientId = 2,
                            UserId = "user2"
                        },
                        new
                        {
                            GProfessionalId = 3,
                            ClientId = 3,
                            UserId = "user3"
                        },
                        new
                        {
                            GProfessionalId = 4,
                            ClientId = 4,
                            UserId = "user4"
                        },
                        new
                        {
                            GProfessionalId = 5,
                            ClientId = 5,
                            UserId = "user5"
                        },
                        new
                        {
                            GProfessionalId = 6,
                            ClientId = 6,
                            UserId = "user6"
                        },
                        new
                        {
                            GProfessionalId = 7,
                            ClientId = 7,
                            UserId = "user7"
                        },
                        new
                        {
                            GProfessionalId = 8,
                            ClientId = 8,
                            UserId = "user8"
                        },
                        new
                        {
                            GProfessionalId = 9,
                            ClientId = 9,
                            UserId = "user9"
                        },
                        new
                        {
                            GProfessionalId = 10,
                            ClientId = 10,
                            UserId = "user10"
                        },
                        new
                        {
                            GProfessionalId = 11,
                            ClientId = 11,
                            UserId = "user11"
                        },
                        new
                        {
                            GProfessionalId = 12,
                            ClientId = 12,
                            UserId = "user12"
                        },
                        new
                        {
                            GProfessionalId = 13,
                            ClientId = 13,
                            UserId = "user13"
                        },
                        new
                        {
                            GProfessionalId = 14,
                            ClientId = 14,
                            UserId = "user14"
                        },
                        new
                        {
                            GProfessionalId = 15,
                            ClientId = 15,
                            UserId = "user15"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Address = "123 Main St",
                            Budget = 500000m,
                            City = "CityA",
                            ClientId = 1,
                            ConstructionType = "Residential",
                            Country = "CountryA",
                            Description = "Residential building item",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 4,
                            PostalCode = "12345",
                            ProjectName = "Project Alpha",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateA",
                            Status = "In Progress",
                            TotalArea = 250.5m
                        },
                        new
                        {
                            ProjectId = 2,
                            Address = "456 Oak St",
                            Budget = 1000000m,
                            City = "CityB",
                            ClientId = 2,
                            ConstructionType = "Commercial",
                            Country = "CountryB",
                            Description = "Commercial building item",
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 5,
                            NumberOfRooms = 10,
                            PostalCode = "23456",
                            ProjectName = "Project Beta",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateB",
                            Status = "Completed",
                            TotalArea = 500.0m
                        },
                        new
                        {
                            ProjectId = 3,
                            Address = "789 Pine St",
                            Budget = 250000m,
                            City = "CityC",
                            ClientId = 3,
                            ConstructionType = "Residential",
                            Country = "CountryC",
                            Description = "Planning phase",
                            Neighborhood = "Suburban",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            PostalCode = "34567",
                            ProjectName = "Project Gamma",
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateC",
                            Status = "Planning",
                            TotalArea = 180.0m
                        },
                        new
                        {
                            ProjectId = 4,
                            Address = "101 Maple St",
                            Budget = 750000m,
                            City = "CityD",
                            ClientId = 4,
                            ConstructionType = "Commercial",
                            Country = "CountryD",
                            Description = "Office building item",
                            Neighborhood = "Tech Park",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "45678",
                            ProjectName = "Project Delta",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateD",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 5,
                            Address = "202 Birch St",
                            Budget = 300000m,
                            City = "CityE",
                            ClientId = 5,
                            ConstructionType = "Residential",
                            Country = "CountryE",
                            Description = "Single-family home",
                            EndDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Quiet Street",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "56789",
                            ProjectName = "Project Epsilon",
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateE",
                            Status = "Completed",
                            TotalArea = 220.0m
                        },
                        new
                        {
                            ProjectId = 6,
                            Address = "303 Cedar St",
                            Budget = 1200000m,
                            City = "CityF",
                            ClientId = 6,
                            ConstructionType = "Commercial",
                            Country = "CountryF",
                            Description = "Shopping mall",
                            Neighborhood = "Retail Hub",
                            NumberOfBathrooms = 10,
                            NumberOfRooms = 20,
                            PostalCode = "67890",
                            ProjectName = "Project Zeta",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateF",
                            Status = "Planning",
                            TotalArea = 800.0m
                        },
                        new
                        {
                            ProjectId = 7,
                            Address = "404 Fir St",
                            Budget = 600000m,
                            City = "CityG",
                            ClientId = 7,
                            ConstructionType = "Residential",
                            Country = "CountryG",
                            Description = "Luxury apartments",
                            Neighborhood = "Uptown",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "78901",
                            ProjectName = "Project Eta",
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateG",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 8,
                            Address = "505 Spruce St",
                            Budget = 500000m,
                            City = "CityH",
                            ClientId = 8,
                            ConstructionType = "Commercial",
                            Country = "CountryH",
                            Description = "Retail space",
                            EndDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Main Street",
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            PostalCode = "89012",
                            ProjectName = "Project Theta",
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateH",
                            Status = "Completed",
                            TotalArea = 150.0m
                        },
                        new
                        {
                            ProjectId = 9,
                            Address = "606 Hemlock St",
                            Budget = 400000m,
                            City = "CityI",
                            ClientId = 9,
                            ConstructionType = "Residential",
                            Country = "CountryI",
                            Description = "Vacation home",
                            Neighborhood = "Lakeside",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "90123",
                            ProjectName = "Project Iota",
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateI",
                            Status = "Planning",
                            TotalArea = 300.0m
                        },
                        new
                        {
                            ProjectId = 10,
                            Address = "707 Juniper St",
                            Budget = 800000m,
                            City = "CityJ",
                            ClientId = 10,
                            ConstructionType = "Commercial",
                            Country = "CountryJ",
                            Description = "Restaurant",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "01234",
                            ProjectName = "Project Kappa",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateJ",
                            Status = "In Progress",
                            TotalArea = 250.0m
                        },
                        new
                        {
                            ProjectId = 11,
                            Address = "808 Willow St",
                            Budget = 350000m,
                            City = "CityK",
                            ClientId = 11,
                            ConstructionType = "Residential",
                            Country = "CountryK",
                            Description = "Townhouse",
                            EndDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Historic District",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "12346",
                            ProjectName = "Project Lambda",
                            StartDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateK",
                            Status = "Completed",
                            TotalArea = 200.0m
                        },
                        new
                        {
                            ProjectId = 12,
                            Address = "909 Poplar St",
                            Budget = 950000m,
                            City = "CityL",
                            ClientId = 12,
                            ConstructionType = "Commercial",
                            Country = "CountryL",
                            Description = "Corporate office",
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "23457",
                            ProjectName = "Project Mu",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateL",
                            Status = "Planning",
                            TotalArea = 400.0m
                        },
                        new
                        {
                            ProjectId = 13,
                            Address = "1010 Redwood St",
                            Budget = 700000m,
                            City = "CityM",
                            ClientId = 13,
                            ConstructionType = "Residential",
                            Country = "CountryM",
                            Description = "Condo complex",
                            Neighborhood = "Urban Area",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "34568",
                            ProjectName = "Project Nu",
                            StartDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateM",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 14,
                            Address = "1111 Fir St",
                            Budget = 1100000m,
                            City = "CityN",
                            ClientId = 14,
                            ConstructionType = "Commercial",
                            Country = "CountryN",
                            Description = "Hotel",
                            EndDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Resort Area",
                            NumberOfBathrooms = 30,
                            NumberOfRooms = 50,
                            PostalCode = "45679",
                            ProjectName = "Project Xi",
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateN",
                            Status = "Completed",
                            TotalArea = 600.0m
                        },
                        new
                        {
                            ProjectId = 15,
                            Address = "1212 Elm St",
                            Budget = 500000m,
                            City = "CityO",
                            ClientId = 15,
                            ConstructionType = "Residential",
                            Country = "CountryO",
                            Description = "Family home",
                            Neighborhood = "Suburban",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "56780",
                            ProjectName = "Project Omicron",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateO",
                            Status = "In Progress",
                            TotalArea = 270.0m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.GenericProfessional", null)
                        .WithMany()
                        .HasForeignKey("GProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Entities.Projects", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("GenericProfessionals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projects", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("Houses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Navigation("GenericProfessionals");

                    b.Navigation("Houses");
                });
#pragma warning restore 612, 618
        }
    }
}
