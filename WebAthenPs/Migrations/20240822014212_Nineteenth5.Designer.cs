// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAthenPs.API.Data;

#nullable disable

namespace WebAthenPs.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240822014212_Nineteenth5")]
    partial class Nineteenth5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "Id");

                    b.HasIndex("Id");

                    b.ToTable("ProjectProfessionals");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Id = 1
                        },
                        new
                        {
                            ProjectId = 1,
                            Id = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            Id = 3
                        },
                        new
                        {
                            ProjectId = 2,
                            Id = 4
                        },
                        new
                        {
                            ProjectId = 3,
                            Id = 5
                        },
                        new
                        {
                            ProjectId = 3,
                            Id = 6
                        },
                        new
                        {
                            ProjectId = 4,
                            Id = 7
                        },
                        new
                        {
                            ProjectId = 4,
                            Id = 8
                        },
                        new
                        {
                            ProjectId = 5,
                            Id = 9
                        },
                        new
                        {
                            ProjectId = 5,
                            Id = 10
                        },
                        new
                        {
                            ProjectId = 6,
                            Id = 11
                        },
                        new
                        {
                            ProjectId = 6,
                            Id = 12
                        },
                        new
                        {
                            ProjectId = 7,
                            Id = 13
                        },
                        new
                        {
                            ProjectId = 7,
                            Id = 14
                        },
                        new
                        {
                            ProjectId = 8,
                            Id = 15
                        },
                        new
                        {
                            ProjectId = 8,
                            Id = 1
                        },
                        new
                        {
                            ProjectId = 9,
                            Id = 2
                        },
                        new
                        {
                            ProjectId = 9,
                            Id = 3
                        },
                        new
                        {
                            ProjectId = 10,
                            Id = 4
                        },
                        new
                        {
                            ProjectId = 10,
                            Id = 5
                        },
                        new
                        {
                            ProjectId = 11,
                            Id = 6
                        },
                        new
                        {
                            ProjectId = 11,
                            Id = 7
                        },
                        new
                        {
                            ProjectId = 12,
                            Id = 8
                        },
                        new
                        {
                            ProjectId = 12,
                            Id = 9
                        },
                        new
                        {
                            ProjectId = 13,
                            Id = 10
                        },
                        new
                        {
                            ProjectId = 13,
                            Id = 11
                        },
                        new
                        {
                            ProjectId = 14,
                            Id = 12
                        },
                        new
                        {
                            ProjectId = 14,
                            Id = 13
                        },
                        new
                        {
                            ProjectId = 15,
                            Id = 14
                        },
                        new
                        {
                            ProjectId = 15,
                            Id = 15
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            Address = "Rua A, 123",
                            CPF = "12345678901",
                            City = "São Paulo",
                            ConcurrencyStamp = "424bd442-12ee-4983-aebd-3d3a0df506aa",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6249),
                            Email = "carlos.silva@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "01000-000",
                            RG = "1234567",
                            SecurityStamp = "43f1f1b5-6391-456e-ac74-0c0a19643f15",
                            State = "SP",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6251),
                            UserName = "Carlos Silva",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            Address = "Rua B, 456",
                            CPF = "23456789012",
                            City = "Rio de Janeiro",
                            ConcurrencyStamp = "09bde743-ab71-418c-bbcb-a05ac27aff8c",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6305),
                            Email = "ana.souza@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "20000-000",
                            RG = "2345678",
                            SecurityStamp = "33665c54-0bd4-4056-9c45-d72d34d39119",
                            State = "RJ",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6305),
                            UserName = "Ana Souza",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            Address = "Rua C, 789",
                            CPF = "34567890123",
                            City = "Belo Horizonte",
                            ConcurrencyStamp = "408708ca-2989-4a8a-a417-c8c0d1910876",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6318),
                            Email = "joao.oliveira@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "30000-000",
                            RG = "3456789",
                            SecurityStamp = "0f64cb73-2afd-4b15-b92a-e5ad10af42c8",
                            State = "MG",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6318),
                            UserName = "João Oliveira",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            Address = "Rua D, 101",
                            CPF = "45678901234",
                            City = "Salvador",
                            ConcurrencyStamp = "02c0b279-cde2-443e-b4b4-2ed54904d669",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6339),
                            Email = "maria.santos@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "40000-000",
                            RG = "4567890",
                            SecurityStamp = "16cd8070-14fc-4400-afe8-7b9f31874c5f",
                            State = "BA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6340),
                            UserName = "Maria Santos",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            Address = "Rua E, 202",
                            CPF = "56789012345",
                            City = "Fortaleza",
                            ConcurrencyStamp = "10596e99-3f56-476d-bfb8-1a4d1ed06df4",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6351),
                            Email = "pedro.almeida@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "60000-000",
                            RG = "5678901",
                            SecurityStamp = "7462faae-4999-44b1-b6cf-1eb8777f21ca",
                            State = "CE",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6351),
                            UserName = "Pedro Almeida",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            Address = "Rua F, 303",
                            CPF = "67890123456",
                            City = "Curitiba",
                            ConcurrencyStamp = "32726b85-018f-443c-9f4c-5f50d02d8887",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6363),
                            Email = "juliana.costa@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "80000-000",
                            RG = "6789012",
                            SecurityStamp = "522ccdf7-7ffb-4755-b0b1-48a2ac8f26f8",
                            State = "PR",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6364),
                            UserName = "Juliana Costa",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            Address = "Rua G, 404",
                            CPF = "78901234567",
                            City = "Porto Alegre",
                            ConcurrencyStamp = "a7c18332-aac4-447f-a1d7-fabe83ab3105",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6400),
                            Email = "roberto.lima@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "90000-000",
                            RG = "7890123",
                            SecurityStamp = "033bb622-3078-4d2d-a181-bf1efea6db17",
                            State = "RS",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6400),
                            UserName = "Roberto Lima",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            Address = "Rua H, 505",
                            CPF = "89012345678",
                            City = "Recife",
                            ConcurrencyStamp = "92cc5d9d-9630-41df-9e08-27fd41a9e0bf",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6412),
                            Email = "patricia.martins@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "50000-000",
                            RG = "8901234",
                            SecurityStamp = "ecbd2f14-e42a-494c-ba3c-7e934a8100ab",
                            State = "PE",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6412),
                            UserName = "Patricia Martins",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            Address = "Rua I, 606",
                            CPF = "90123456789",
                            City = "Belém",
                            ConcurrencyStamp = "12e8a886-71fd-403d-b6c7-d2ab3172b18b",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6425),
                            Email = "ricardo.fernandes@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "66000-000",
                            RG = "9012345",
                            SecurityStamp = "c1afaa7f-9df4-476a-9b43-901f72c7f12b",
                            State = "PA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6425),
                            UserName = "Ricardo Fernandes",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            Address = "Rua J, 707",
                            CPF = "01234567890",
                            City = "Manaus",
                            ConcurrencyStamp = "f4206310-a183-47b1-9c16-2516a77eda1c",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6436),
                            Email = "claudia.rodrigues@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "69000-000",
                            RG = "0123456",
                            SecurityStamp = "b2e1bdc1-9fc6-44c1-babf-7da1a5ca174a",
                            State = "AM",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6436),
                            UserName = "Claudia Rodrigues",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            Address = "Rua K, 808",
                            CPF = "12345678901",
                            City = "São Luís",
                            ConcurrencyStamp = "70deac3d-01dd-470d-8e29-5169737a25f7",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6447),
                            Email = "fernando.oliveira@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "65000-000",
                            RG = "1234567",
                            SecurityStamp = "597e6e96-7395-4156-a8b0-d93da5a811bb",
                            State = "MA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6448),
                            UserName = "Fernando Oliveira",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            Address = "Rua L, 909",
                            CPF = "23456789012",
                            City = "São José de Ribamar",
                            ConcurrencyStamp = "dc97926d-0736-4c98-bfd9-326d6326a4ac",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6460),
                            Email = "luciana.pereira@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "65100-000",
                            RG = "2345678",
                            SecurityStamp = "181f151e-7e8a-4c20-b35c-15ea9710715a",
                            State = "MA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6460),
                            UserName = "Luciana Pereira",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            Address = "Rua M, 1010",
                            CPF = "34567890123",
                            City = "Teresina",
                            ConcurrencyStamp = "10f28f70-46f9-4bcf-84de-fe4fcc8445f4",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6471),
                            Email = "eduardo.costa@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "64000-000",
                            RG = "3456789",
                            SecurityStamp = "4e60539c-c6f1-4055-a630-28f18b843886",
                            State = "PI",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6471),
                            UserName = "Eduardo Costa",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            Address = "Rua N, 1111",
                            CPF = "45678901234",
                            City = "Maceió",
                            ConcurrencyStamp = "ee8c1c43-d502-48ce-ad4e-4f2cbd4ea783",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6484),
                            Email = "renata.almeida@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "57000-000",
                            RG = "4567890",
                            SecurityStamp = "28e0ebb8-64bf-4646-a841-22214ddcd17e",
                            State = "AL",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6484),
                            UserName = "Renata Almeida",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            Address = "Rua O, 1212",
                            CPF = "56789012345",
                            City = "João Pessoa",
                            ConcurrencyStamp = "8bf7c7b6-cf22-4e36-b309-97ac4e1519f4",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6495),
                            Email = "carlos.eduardo@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "58000-000",
                            RG = "5678901",
                            SecurityStamp = "38e94c80-3679-4e7f-be96-32a4fc4056d2",
                            State = "PB",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6495),
                            UserName = "Carlos Eduardo",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = "user16",
                            AccessFailedCount = 0,
                            Address = "Rua P, 1313",
                            CPF = "67890123456",
                            City = "São Paulo",
                            ConcurrencyStamp = "eb7edd3c-896f-480f-b062-77cccb0ed998",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6506),
                            Email = "lucas.oliveira@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "01001-000",
                            RG = "6789012",
                            SecurityStamp = "1f173120-b06d-421e-9ad2-f234ac3dbab8",
                            State = "SP",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6507),
                            UserName = "Lucas Oliveira",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user17",
                            AccessFailedCount = 0,
                            Address = "Rua Q, 1414",
                            CPF = "78901234567",
                            City = "Rio de Janeiro",
                            ConcurrencyStamp = "cf5e3c41-314d-42cf-85a2-c67ac088ba7f",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6519),
                            Email = "mariana.silva@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "20001-000",
                            RG = "7890123",
                            SecurityStamp = "ae9cdca2-b1b7-45d4-b2ea-2a696799ac8d",
                            State = "RJ",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6519),
                            UserName = "Mariana Silva",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user18",
                            AccessFailedCount = 0,
                            Address = "Rua R, 1515",
                            CPF = "89012345678",
                            City = "Belo Horizonte",
                            ConcurrencyStamp = "1ca9eafc-c66b-4d28-95b6-3a8885fe059c",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6530),
                            Email = "gabriel.santos@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "30001-000",
                            RG = "8901234",
                            SecurityStamp = "31691924-d78a-4ca2-aedf-3751f8903eda",
                            State = "MG",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6530),
                            UserName = "Gabriel Santos",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user19",
                            AccessFailedCount = 0,
                            Address = "Rua S, 1616",
                            CPF = "90123456789",
                            City = "Salvador",
                            ConcurrencyStamp = "e5c956bc-a601-408e-be67-e4d83724fd05",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6541),
                            Email = "juliana.costa@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "40001-000",
                            RG = "9012345",
                            SecurityStamp = "eeb0f5af-9817-4650-9600-c048cc6f3a87",
                            State = "BA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6542),
                            UserName = "Juliana Costa",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user20",
                            AccessFailedCount = 0,
                            Address = "Rua T, 1717",
                            CPF = "01234567890",
                            City = "Fortaleza",
                            ConcurrencyStamp = "6ae4f6a8-2210-41e9-8519-35c995d1ea8a",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6555),
                            Email = "roberto.almeida@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "60001-000",
                            RG = "0123456",
                            SecurityStamp = "4e137621-f040-4a6c-a802-b3e586c02648",
                            State = "CE",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6555),
                            UserName = "Roberto Almeida",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user21",
                            AccessFailedCount = 0,
                            Address = "Rua U, 1818",
                            CPF = "12345678901",
                            City = "Curitiba",
                            ConcurrencyStamp = "f10389b5-176c-44c7-83af-fd98ef57b781",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6566),
                            Email = "patricia.martins@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "80001-000",
                            RG = "1234567",
                            SecurityStamp = "2b283d79-1533-46b1-a25c-4933bbfc31dd",
                            State = "PR",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6566),
                            UserName = "Patricia Martins",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user22",
                            AccessFailedCount = 0,
                            Address = "Rua V, 1919",
                            CPF = "23456789012",
                            City = "Porto Alegre",
                            ConcurrencyStamp = "7fe60739-39a4-4841-bcfe-d0e744657bbf",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6579),
                            Email = "ricardo.lima@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "90001-000",
                            RG = "2345678",
                            SecurityStamp = "3bebb14b-d088-49d1-984c-b718bb93cbeb",
                            State = "RS",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6579),
                            UserName = "Ricardo Lima",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user23",
                            AccessFailedCount = 0,
                            Address = "Rua W, 2020",
                            CPF = "34567890123",
                            City = "São Luís",
                            ConcurrencyStamp = "643e9c9b-3591-48a3-92e9-66a87e869ae4",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6611),
                            Email = "claudia.souza@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "65001-000",
                            RG = "3456789",
                            SecurityStamp = "ca127d35-c22e-41a3-977d-e560f13ce178",
                            State = "MA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6611),
                            UserName = "Claudia Souza",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user24",
                            AccessFailedCount = 0,
                            Address = "Rua X, 2121",
                            CPF = "45678901234",
                            City = "Teresina",
                            ConcurrencyStamp = "d9627eeb-5114-4566-b7fd-2624a032bb5a",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6622),
                            Email = "fernando.santos@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "64001-000",
                            RG = "4567890",
                            SecurityStamp = "1fa01837-09c4-4d47-8d4a-492de737342f",
                            State = "PI",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6623),
                            UserName = "Fernando Santos",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user25",
                            AccessFailedCount = 0,
                            Address = "Rua Y, 2222",
                            CPF = "56789012345",
                            City = "Maceió",
                            ConcurrencyStamp = "fda2a960-27bf-4ca1-8210-258413c490f8",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6636),
                            Email = "juliana.lima@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "57001-000",
                            RG = "5678901",
                            SecurityStamp = "41e5cd9a-8443-4129-b8ff-05db5cb11350",
                            State = "AL",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6636),
                            UserName = "Juliana Lima",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user26",
                            AccessFailedCount = 0,
                            Address = "Rua Z, 2323",
                            CPF = "67890123456",
                            City = "João Pessoa",
                            ConcurrencyStamp = "32596efc-fbd0-4621-9afa-65ea110090e6",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6647),
                            Email = "ricardo.costa@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "58001-000",
                            RG = "6789012",
                            SecurityStamp = "bf71724e-78de-4a34-b027-2b05636ea57b",
                            State = "PB",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6647),
                            UserName = "Ricardo Costa",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user27",
                            AccessFailedCount = 0,
                            Address = "Rua AA, 2424",
                            CPF = "78901234567",
                            City = "São Paulo",
                            ConcurrencyStamp = "cc7cfb85-61a5-4317-ac10-74d200d3d065",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6658),
                            Email = "mariana.almeida@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "01002-000",
                            RG = "7890123",
                            SecurityStamp = "f44fca81-6bb5-477b-af8d-1fc8aab6e401",
                            State = "SP",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6659),
                            UserName = "Mariana Almeida",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user28",
                            AccessFailedCount = 0,
                            Address = "Rua BB, 2525",
                            CPF = "89012345678",
                            City = "Rio de Janeiro",
                            ConcurrencyStamp = "edfa48ec-b0bd-4ae7-a866-2f088c5e5d45",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6671),
                            Email = "gabriel.souza@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "20002-000",
                            RG = "8901234",
                            SecurityStamp = "98b5b973-2d0b-4924-90ad-d622ce201a43",
                            State = "RJ",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6671),
                            UserName = "Gabriel Souza",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user29",
                            AccessFailedCount = 0,
                            Address = "Rua CC, 2626",
                            CPF = "90123456789",
                            City = "Belo Horizonte",
                            ConcurrencyStamp = "d832c8a3-96cb-425f-8895-fbd25bcdf21f",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6682),
                            Email = "juliana.rodrigues@example.com",
                            EmailConfirmed = false,
                            Gender = "F",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "30002-000",
                            RG = "9012345",
                            SecurityStamp = "8f5d1d65-37b2-40d4-8c00-7e9e9d2ac714",
                            State = "MG",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6683),
                            UserName = "Juliana Rodrigues",
                            UserType = "Professional"
                        },
                        new
                        {
                            Id = "user30",
                            AccessFailedCount = 0,
                            Address = "Rua DD, 2727",
                            CPF = "01234567890",
                            City = "Salvador",
                            ConcurrencyStamp = "c2a577b4-b629-4b3f-9ca6-08442340bbda",
                            CreatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6695),
                            Email = "roberto.fernandes@example.com",
                            EmailConfirmed = false,
                            Gender = "M",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            PostalCode = "40002-000",
                            RG = "0123456",
                            SecurityStamp = "3acf2b3d-32d0-4822-82b8-96bbcef56571",
                            State = "BA",
                            TwoFactorEnabled = false,
                            UpdatedDate = new DateTime(2024, 8, 22, 1, 42, 12, 244, DateTimeKind.Utc).AddTicks(6695),
                            UserName = "Roberto Fernandes",
                            UserType = "Professional"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            UserId = "user1"
                        },
                        new
                        {
                            ClientId = 2,
                            UserId = "user2"
                        },
                        new
                        {
                            ClientId = 3,
                            UserId = "user3"
                        },
                        new
                        {
                            ClientId = 4,
                            UserId = "user4"
                        },
                        new
                        {
                            ClientId = 5,
                            UserId = "user5"
                        },
                        new
                        {
                            ClientId = 6,
                            UserId = "user6"
                        },
                        new
                        {
                            ClientId = 7,
                            UserId = "user7"
                        },
                        new
                        {
                            ClientId = 8,
                            UserId = "user8"
                        },
                        new
                        {
                            ClientId = 9,
                            UserId = "user9"
                        },
                        new
                        {
                            ClientId = 10,
                            UserId = "user10"
                        },
                        new
                        {
                            ClientId = 11,
                            UserId = "user11"
                        },
                        new
                        {
                            ClientId = 12,
                            UserId = "user12"
                        },
                        new
                        {
                            ClientId = 13,
                            UserId = "user13"
                        },
                        new
                        {
                            ClientId = 14,
                            UserId = "user14"
                        },
                        new
                        {
                            ClientId = 15,
                            UserId = "user15"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ProfessionalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("GenericProfessionals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            ProfessionalType = "Arquiteto",
                            UserId = "user16"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            ProfessionalType = "Eletricista",
                            UserId = "user17"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            ProfessionalType = "Engenheiro",
                            UserId = "user18"
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            ProfessionalType = "Pedreiro",
                            UserId = "user19"
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            ProfessionalType = "Encanador",
                            UserId = "user20"
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 6,
                            ProfessionalType = "Arquiteto",
                            UserId = "user21"
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 7,
                            ProfessionalType = "Eletricista",
                            UserId = "user22"
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 8,
                            ProfessionalType = "Engenheiro",
                            UserId = "user23"
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 9,
                            ProfessionalType = "Pedreiro",
                            UserId = "user24"
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 10,
                            ProfessionalType = "Encanador",
                            UserId = "user25"
                        },
                        new
                        {
                            Id = 11,
                            ClientId = 11,
                            ProfessionalType = "Arquiteto",
                            UserId = "user26"
                        },
                        new
                        {
                            Id = 12,
                            ClientId = 12,
                            ProfessionalType = "Eletricista",
                            UserId = "user27"
                        },
                        new
                        {
                            Id = 13,
                            ClientId = 13,
                            ProfessionalType = "Engenheiro",
                            UserId = "user28"
                        },
                        new
                        {
                            Id = 14,
                            ClientId = 14,
                            ProfessionalType = "Pedreiro",
                            UserId = "user29"
                        },
                        new
                        {
                            Id = 15,
                            ClientId = 15,
                            ProfessionalType = "Encanador",
                            UserId = "user30"
                        });
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projecty", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ActStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ActStep = "Phase 1",
                            Address = "123 Main St",
                            Budget = 500000m,
                            City = "CityA",
                            ClientId = 1,
                            ConstructionType = "Residential",
                            Country = "CountryA",
                            Description = "Residential building item",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 4,
                            PostalCode = "12345",
                            ProjectName = "Project Alpha",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateA",
                            Status = "In Progress",
                            TotalArea = 250.5m
                        },
                        new
                        {
                            ProjectId = 2,
                            ActStep = "Phase 2",
                            Address = "456 Oak St",
                            Budget = 1000000m,
                            City = "CityB",
                            ClientId = 2,
                            ConstructionType = "Commercial",
                            Country = "CountryB",
                            Description = "Commercial building item",
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 5,
                            NumberOfRooms = 10,
                            PostalCode = "23456",
                            ProjectName = "Project Beta",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateB",
                            Status = "Completed",
                            TotalArea = 500.0m
                        },
                        new
                        {
                            ProjectId = 3,
                            ActStep = "Initial Planning",
                            Address = "789 Pine St",
                            Budget = 250000m,
                            City = "CityC",
                            ClientId = 3,
                            ConstructionType = "Residential",
                            Country = "CountryC",
                            Description = "Planning phase",
                            Neighborhood = "Suburban",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            PostalCode = "34567",
                            ProjectName = "Project Gamma",
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateC",
                            Status = "Planning",
                            TotalArea = 180.0m
                        },
                        new
                        {
                            ProjectId = 4,
                            ActStep = "Construction",
                            Address = "101 Maple St",
                            Budget = 750000m,
                            City = "CityD",
                            ClientId = 4,
                            ConstructionType = "Commercial",
                            Country = "CountryD",
                            Description = "Office building item",
                            Neighborhood = "Tech Park",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "45678",
                            ProjectName = "Project Delta",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateD",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 5,
                            ActStep = "Final Touches",
                            Address = "202 Birch St",
                            Budget = 300000m,
                            City = "CityE",
                            ClientId = 5,
                            ConstructionType = "Residential",
                            Country = "CountryE",
                            Description = "Single-family home",
                            EndDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Quiet Street",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "56789",
                            ProjectName = "Project Epsilon",
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateE",
                            Status = "Completed",
                            TotalArea = 220.0m
                        },
                        new
                        {
                            ProjectId = 6,
                            ActStep = "Site Selection",
                            Address = "303 Cedar St",
                            Budget = 1200000m,
                            City = "CityF",
                            ClientId = 6,
                            ConstructionType = "Commercial",
                            Country = "CountryF",
                            Description = "Shopping mall",
                            Neighborhood = "Retail Hub",
                            NumberOfBathrooms = 10,
                            NumberOfRooms = 20,
                            PostalCode = "67890",
                            ProjectName = "Project Zeta",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateF",
                            Status = "Planning",
                            TotalArea = 800.0m
                        },
                        new
                        {
                            ProjectId = 7,
                            ActStep = "Structural Work",
                            Address = "404 Fir St",
                            Budget = 600000m,
                            City = "CityG",
                            ClientId = 7,
                            ConstructionType = "Residential",
                            Country = "CountryG",
                            Description = "Luxury apartments",
                            Neighborhood = "Uptown",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "78901",
                            ProjectName = "Project Eta",
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateG",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 8,
                            ActStep = "Inspection",
                            Address = "505 Spruce St",
                            Budget = 500000m,
                            City = "CityH",
                            ClientId = 8,
                            ConstructionType = "Commercial",
                            Country = "CountryH",
                            Description = "Retail space",
                            EndDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Main Street",
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            PostalCode = "89012",
                            ProjectName = "Project Theta",
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateH",
                            Status = "Completed",
                            TotalArea = 150.0m
                        },
                        new
                        {
                            ProjectId = 9,
                            ActStep = "Budget Approval",
                            Address = "606 Hemlock St",
                            Budget = 400000m,
                            City = "CityI",
                            ClientId = 9,
                            ConstructionType = "Residential",
                            Country = "CountryI",
                            Description = "Vacation home",
                            Neighborhood = "Lakeside",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "90123",
                            ProjectName = "Project Iota",
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateI",
                            Status = "Planning",
                            TotalArea = 300.0m
                        },
                        new
                        {
                            ProjectId = 10,
                            ActStep = "Interior Design",
                            Address = "707 Juniper St",
                            Budget = 800000m,
                            City = "CityJ",
                            ClientId = 10,
                            ConstructionType = "Commercial",
                            Country = "CountryJ",
                            Description = "Restaurant",
                            Neighborhood = "Downtown",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 5,
                            PostalCode = "01234",
                            ProjectName = "Project Kappa",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateJ",
                            Status = "In Progress",
                            TotalArea = 250.0m
                        },
                        new
                        {
                            ProjectId = 11,
                            ActStep = "Landscaping",
                            Address = "808 Willow St",
                            Budget = 350000m,
                            City = "CityK",
                            ClientId = 11,
                            ConstructionType = "Residential",
                            Country = "CountryK",
                            Description = "Townhouse",
                            EndDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Historic District",
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            PostalCode = "12346",
                            ProjectName = "Project Lambda",
                            StartDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateK",
                            Status = "Completed",
                            TotalArea = 200.0m
                        },
                        new
                        {
                            ProjectId = 12,
                            ActStep = "Permitting",
                            Address = "909 Poplar St",
                            Budget = 950000m,
                            City = "CityL",
                            ClientId = 12,
                            ConstructionType = "Commercial",
                            Country = "CountryL",
                            Description = "Corporate office",
                            Neighborhood = "Business District",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 8,
                            PostalCode = "23457",
                            ProjectName = "Project Mu",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateL",
                            Status = "Planning",
                            TotalArea = 400.0m
                        },
                        new
                        {
                            ProjectId = 13,
                            ActStep = "Framing",
                            Address = "1010 Redwood St",
                            Budget = 700000m,
                            City = "CityM",
                            ClientId = 13,
                            ConstructionType = "Residential",
                            Country = "CountryM",
                            Description = "Condo complex",
                            Neighborhood = "Urban Area",
                            NumberOfBathrooms = 4,
                            NumberOfRooms = 6,
                            PostalCode = "34568",
                            ProjectName = "Project Nu",
                            StartDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateM",
                            Status = "In Progress",
                            TotalArea = 350.0m
                        },
                        new
                        {
                            ProjectId = 14,
                            ActStep = "Final Inspection",
                            Address = "1111 Cedar St",
                            Budget = 1100000m,
                            City = "CityN",
                            ClientId = 14,
                            ConstructionType = "Commercial",
                            Country = "CountryN",
                            Description = "Tech campus",
                            EndDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Neighborhood = "Innovation Hub",
                            NumberOfBathrooms = 15,
                            NumberOfRooms = 30,
                            PostalCode = "45679",
                            ProjectName = "Project Xi",
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateN",
                            Status = "Completed",
                            TotalArea = 1000.0m
                        },
                        new
                        {
                            ProjectId = 15,
                            ActStep = "Design Approval",
                            Address = "1212 Birch St",
                            Budget = 550000m,
                            City = "CityO",
                            ClientId = 15,
                            ConstructionType = "Residential",
                            Country = "CountryO",
                            Description = "Eco-friendly home",
                            Neighborhood = "Green Valley",
                            NumberOfBathrooms = 3,
                            NumberOfRooms = 4,
                            PostalCode = "56790",
                            ProjectName = "Project Omicron",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = "StateO",
                            Status = "Planning",
                            TotalArea = 275.0m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectProfessionals", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.GenericProfessional", null)
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAthenPs.API.Entities.Projecty", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.GenericProfessional", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("GenericProfessionals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebAthenPs.API.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Projecty", b =>
                {
                    b.HasOne("WebAthenPs.API.Entities.Client", "Client")
                        .WithMany("Houses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WebAthenPs.API.Entities.Client", b =>
                {
                    b.Navigation("GenericProfessionals");

                    b.Navigation("Houses");
                });
#pragma warning restore 612, 618
        }
    }
}
